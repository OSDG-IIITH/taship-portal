(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'idi'"
p3
sS'layer'
p4
S'/var/www/html/web2py/applications/taportal/controllers/overall_admin.py'
p5
sS'code'
p6
S'#################################################################\n# These are the controllers for the overall admin of the portal.#\n#################################################################\n\n#########################################################################\n\n# Section to handle mails\n\nimport smtplib\nimport gluon\n\nclass NewMail(object):\n    def __init__(self):\n        self.settings = gluon.tools.Settings()\n        self.settings.server = \'smtp.gmail.com:587\'\n        self.settings.use_tls = True\n        self.settings.sender = \'\'\n        self.settings.login = ""\n        self.settings.lock_keys = True\n    def send(self,to,subject,mesg):\n            try:\n                (host, port) = self.settings.server.split(\':\')\n                server = smtplib.SMTP(host, port)\n                if self.settings.login:\n                    server.ehlo()\n                    server.ehlo()\n                    (username, password) = self.settings.login.split(\':\')\n                mesg = "From: %s\\n"%(self.settings.sender)+"To: %s\\n" %(to)+"Subject: %s\\n" % (subject)+"\\r\\n"+(mesg)+"\\r\\n"\n                server.sendmail(self.settings.sender, to, mesg)\n                server.quit()\n            except Exception, e:\n                print e\n                return False\n            return True\n\ndef sendmail(sender,reciever,subj,title):\n\n    mail=NewMail()\n    # specify server\n    mail.settings.server=\'mail.iiit.ac.in:25\'\n    mail.settings.login=\'username:password\' or None\n\n# specify address to send as\n    mail.settings.sender=sender\n\n#   mail.settings.lock_keys=True\n    mail.settings.use_tls=True\n#   return mail.settings.keys()\n\n#send the message\n    print "Mail to be sent"\n    return mail.send(to=reciever, subject=title, mesg=subj)\n\n#sendmail(\'mohit.jain@research.iiit.ac.in\',\'mohit.jain@research.iiit.ac.in\',\'hello there!\',\'test mail\')\n\n#########################################################################\n\n\ndef check_usertype():\n    """ \n    Redirects malicious users to their homepages.\n    """\n    if session.login==1:\n        msg = \'Stop trying to mess things up -_-\'\n        redirect(URL(\'overall_admin\',\'index?message=%s\'%msg))\n    elif session.login==2:\n        msg = \'Stop trying to mess things up -_-\'\n        redirect(URL(\'faculty\',\'index?message=%s\'%msg))\n    elif session.login==3:\n        msg = \'Stop trying to mess things up -_-\'\n        redirect(URL(\'default\',\'index?message=%s\'%msg))\n    \n    session.flash = \'An unexpected error occured :/\'\n    redirect(URL(\'default\',\'login\'))\n\ndef index():\n    \'\'\'\n    Homepage for the admin.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    if not request.vars.message:\n\tmessage = \'Greetings \'+session.name\n    else:\n\tmessage =request.vars.message\n\n    response.flash = message\n    return locals()\n\ndef sem_detail():\n    \'\'\'\n    Add a new semester or list all semester.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Semester)\n    if form.process().accepted:\n        response.flash = \'New Semester Added : \'+form.vars.sem_name\n    elif form.errors:\n        response.flash = \'Semester Addition Failed : Form has errors!\'\n\n    createSemForm = form\n    semDetail = db(db.Semester.id>0).select(db.Semester.ALL)\n\n    return locals()\n\ndef admin_detail():\n    \'\'\'\n    Create a new admin for the portal\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Admin)\n    if form.process().accepted:\n        response.flash = \'New Admin Added : \'+form.vars.ad_name\n    elif form.errors:\n        response.flash = \'Admin not created : Form has errors!\'\n\n    addAdminForm = form\n    adminDetail = db(db.Admin.id>0).select(db.Admin.ALL)\n\n    return locals()\n\ndef faculty_detail():\n    \'\'\'\n    Add a new faculty member or list all members or allot course to faculty.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Faculty)\n    if form.process().accepted:\n        response.flash = \'New Faculty Added\'+form.vars.fac_name\n    elif form.errors:\n        response.flash = \'Faculty not added : Form has errors!\'\n\n    addFacultyForm = form\n    facultyDetail = db(db.Faculty.id>0).select(db.Faculty.ALL)\n   \n    form = SQLFORM(db.Faculty_Course)\n    if form.process().accepted:\n        response.flash = \'Course alloted to Faculty\'\n    elif form.errors:\n        response.flash = \'Course not alloted : Form has errors!\'\n\n    facultyCourseForm = form\n\n    return locals()\n\ndef course_detail():\n    \'\'\'\n    Add a new Course or list all course details.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Course)\n    if form.process().accepted:\n        response.flash = \'New Course Added : \'+form.vars.c_name\n    elif form.errors:\n        response.flash = \'Course not added : Form has errors!\'\n\n    addCourseForm = form\n    courseDetail = db(db.Course.id>0).select(db.Course.ALL)\n\n    return locals()\n\ndef set_deadline():\n    \'\'\'\n    Set the deadline for application and nomination.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.AppDeadline)\n    if form.process().accepted:\n        response.flash = \'Application Period Set : \'+form.vars.start+\' to \'+form.vars.end\n    elif form.errors:\n        response.flash = \'Application Period not Set : Form has errors!\'\n\n    appDeadlineForm = form\n    appDetail = db(db.AppDeadline.id>0).select(db.AppDeadline.ALL)[-1]\n    \n    form = SQLFORM(db.NomDeadline)\n    if form.process().accepted:\n        response.flash = \'Nomination Period Set : \'+form.vars.start+\' to \'+form.vars.end\n    elif form.errors:\n        response.flash = \'Nomination Period not Set : Form has errors!\'\n\n    nomDeadlineForm = form\n    nomDetail = db(db.AppDeadline.id>0).select(db.AppDeadline.ALL)[-1]\n\n    return locals()\n\ndef application_detail():\n    \'\'\'\n    View the status of all applications and select nominated candidates.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    appDetail = db((db.Application.id>0) & (db.Applicant.id==db.Application.ap_id) & (db.Course.id==db.Application.c_id)).select(db.Application.ALL, db.Applicant.ALL, db.Course.ALL, orderby=db.Course.id)\n    return locals()\n\ndef accept_application():\n    \'\'\'\n    Changes the status from nominated -> accepted.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    indices = request.vars.check\n    if indices:\n        appDetail = db((db.Application.id>0) & (db.Applicant.id==db.Application.ap_id) & (db.Course.id==db.Application.c_id)).select(db.Application.ALL, db.Applicant.ALL, db.Course.ALL, orderby=db.Course.id)\n        for idx in indices:\n            db(db.Application.id==idx).update(status=\'Selected\')\n\t    admin_email = db(db.Admin.id>0).select(db.Admin.ALL)[0][\'ad_emailid\']\n\t    details = db((db.Application.id==idx) & (db.Applicant.id==db.Application.ap_id) & (db.Application.c_id==db.Course.idi)).select(db.Applicant.ALL, db.Course.ALL)[0]\n            stud_name = details[\'Applicant\'][\'ap_name\']\n            stud_email = details[\'Applicant\'][\'ap_emailid\']\n            stud_course = details[\'Course\'][\'c_name\']\n\t    #sendmail(admin_email,stud_email,\'Congratulations \'+stud_name+\'! You have been selected as a TA for the \'+stud_course+\' course. Please accept this position on the TAship portal within the next 24hours to confirm your selection.\',\'[TA-Portal] Selected as TA for \'+stud_course+\' [NO REPLY]\')\n    else:\n        pass\n\n    redirect(URL(\'overall_admin\',\'application_detail\'))\n\n    return locals()\n\nresponse._vars=response._caller(accept_application)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/var/www/html/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/var/www/html/web2py/applications/taportal/controllers/overall_admin.py", line 233, in <module>\n  File "/var/www/html/web2py/gluon/globals.py", line 392, in <lambda>\n    self._caller = lambda f: f()\n  File "/var/www/html/web2py/applications/taportal/controllers/overall_admin.py", line 221, in accept_application\n    details = db((db.Application.id==idx) & (db.Applicant.id==db.Application.ap_id) & (db.Application.c_id==db.Course.idi)).select(db.Applicant.ALL, db.Course.ALL)[0]\n  File "/var/www/html/web2py/gluon/dal.py", line 9110, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'idi\'\n'
p11
s.