(dp1
S'output'
p2
S"<type 'exceptions.IndexError'> list index out of range"
p3
sS'layer'
p4
S'/var/www/html/web2py/applications/taportal/controllers/overall_admin.py'
p5
sS'code'
p6
S'#################################################################\n# These are the controllers for the overall admin of the portal.#\n#################################################################\n\ndef check_usertype():\n    """ \n    Redirects malicious users to their homepages.\n    """\n    if session.login==1:\n        session.flash = \'Stop trying to mess things up -_-\'\n        redirect(URL(\'overall_admin\',\'index\'))\n    elif session.login==2:\n        session.flash = \'Stop trying to mess things up -_-\'\n        redirect(URL(\'faculty\',\'index\'))\n    elif session.login==3:\n        session.flash = \'Stop trying to mess things up -_-\'\n        redirect(URL(\'default\',\'index\'))\n    \n    session.flash = \'An unexpected error occured :/\'\n    redirect(URL(\'default\',\'login\'))\n\ndef index():\n    \'\'\'\n    Homepage for the admin.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    session.flash = \'Welcome!\'\n    return locals()\n\ndef sem_detail():\n    \'\'\'\n    Add a new semester or list all semester.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Semester)\n    if form.process().accepted:\n        response.flash = \'New Semester Added : \'+form.vars.sem_name\n    elif form.errors:\n        response.flash = \'Semester Addition Failed : Form has errors!\'\n\n    createSemForm = form\n    semDetail = db(db.Semester.id>0).select(db.Semester.ALL)\n\n    return locals()\n\ndef admin_detail():\n    \'\'\'\n    Create a new admin for the portal\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Admin)\n    if form.process().accepted:\n        response.flash = \'New Admin Added : \'+form.vars.ad_name\n    elif form.errors:\n        response.flash = \'Admin not created : Form has errors!\'\n\n    addAdminForm = form\n    adminDetail = db(db.Admin.id>0).select(db.Admin.ALL)\n\n    return locals()\n\ndef faculty_detail():\n    \'\'\'\n    Add a new faculty member or list all members or allot course to faculty.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Faculty)\n    if form.process().accepted:\n        response.flash = \'New Faculty Added\'+form.vars.fac_name\n    elif form.errors:\n        response.flash = \'Faculty not added : Form has errors!\'\n\n    addFacultyForm = form\n    facultyDetail = db(db.Faculty.id>0).select(db.Faculty.ALL)\n   \n    form = SQLFORM(db.Faculty_Course)\n    if form.process().accepted:\n        response.flash = \'Course alloted to Faculty\'\n    elif form.errors:\n        response.flash = \'Course not alloted : Form has errors!\'\n\n    facultyCourseForm = form\n\n    return locals()\n\ndef course_detail():\n    \'\'\'\n    Add a new Course or list all course details.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.Course)\n    if form.process().accepted:\n        response.flash = \'New Course Added : \'+form.vars.c_name\n    elif form.errors:\n        response.flash = \'Course not added : Form has errors!\'\n\n    addCourseForm = form\n    courseDetail = db(db.Course.id>0).select(db.Course.ALL)\n\n    return locals()\n\ndef set_deadline():\n    \'\'\'\n    Set the deadline for application and nomination.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    form = SQLFORM(db.AppDeadline)\n    if form.process().accepted:\n        response.flash = \'Application Period Set : \'+form.vars.start+\' to \'+form.vars.end\n    elif form.errors:\n        response.flash = \'Application Period not Set : Form has errors!\'\n\n    appDeadlineForm = form\n    appDetail = db(db.AppDeadline.id>0).select(db.AppDeadline.ALL)[-1]\n    \n    form = SQLFORM(db.NomDeadline)\n    if form.process().accepted:\n        response.flash = \'Nomination Period Set : \'+form.vars.start+\' to \'+form.vars.end\n    elif form.errors:\n        response.flash = \'Nomination Period not Set : Form has errors!\'\n\n    nomDeadlineForm = form\n    nomDetail = db(db.AppDeadline.id>0).select(db.AppDeadline.ALL)[-1]\n\n    return locals()\n\ndef application_detail():\n    \'\'\'\n    View the status of all applications and select nominated candidates.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    appDetail = db((db.Application.id>0) & (db.Applicant.id==db.Application.ap_id) & (db.Course.id==db.Application.c_id)).select(db.Application.ALL, db.Applicant.ALL, db.Course.ALL, orderby=db.Course.id)\n    return locals()\n\ndef accept_application():\n    \'\'\'\n    Changes the status from nominated -> accepted.\n    \'\'\'\n    if not session.login==1:\n        check_usertype()\n\n    indices = request.vars.check\n    if indices:\n        appDetail = db((db.Application.id>0) & (db.Applicant.id==db.Application.ap_id) & (db.Course.id==db.Application.c_id)).select(db.Application.ALL, db.Applicant.ALL, db.Course.ALL, orderby=db.Course.id)\n        for idx in indices:\n            db(db.Application.id==idx).update(status=\'Selected\')\n    else:\n        nothing=\'\'\n\n    redirect(URL(\'overall_admin\',\'application_detail\'))\n\n    return locals()\n\nresponse._vars=response._caller(set_deadline)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/var/www/html/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/var/www/html/web2py/applications/taportal/controllers/overall_admin.py", line 168, in <module>\n  File "/var/www/html/web2py/gluon/globals.py", line 392, in <lambda>\n    self._caller = lambda f: f()\n  File "/var/www/html/web2py/applications/taportal/controllers/overall_admin.py", line 126, in set_deadline\n    appDetail = db(db.AppDeadline.id>0).select(db.AppDeadline.ALL)[-1]\n  File "/var/www/html/web2py/gluon/dal.py", line 11062, in __getitem__\n    row = self.records[i]\nIndexError: list index out of range\n'
p11
s.